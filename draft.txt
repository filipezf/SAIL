# create generic past

for ():
	random events():



def step():
   for i in range(100):	
   if done >0 
	break 


def step0():
     logarithmic_ts
      stripes = stripes + G*stripes1    #wm
        # supervised

     u = mate + energy + friend+ reciprocal + kin

     
     nn_all --ctrol--> hip   complete pattern
     hip --ctrol--> nn_all

    short_term_mem 
    store traces

    # replan ?
     


    x_believe -> gate beliefs

    x_before 
    x_after,
    x_can

   for i in range(N):
       layer[i+1] = ReLU(layer[i] )
   multimodal

   layer[i+1] = ctx + RELU( layer[i] )




wm_ctx/task # stripes

generate

ctx -> automatic vs generic

generic -> cache memory



uncertainty



rehearsal(): # dream











ev = []

ev[i] = ev[j]


magnitude
bigger, smaller, compare


process


introspection:
  get goal
  set goal
  get/set belief
  model _self



# answer questions abous past, future, capabilities, goals



# get food



# ask mate



# lie
# detect (?) lie




# call partners to hit enemy
# receive call





# train nn



# pretend play ( utility of this decreases with agent's network "age" )


# tell a story


# feel happy (birth child), sad (death kin)



# ask join group


# tell a gossip


#


# tell a joke

# answer what happen after dead


# ask help big agent















